user nginx;

events {
	worker_connections 1000;
}

http {

	upstream socket {

		ip_hash;
		server app:11001;
	}

	server {
		listen 8080;
		location / {
			proxy_pass http://app:11001;
			proxy_http_version 1.1;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $remote_addr;
			proxy_set_header Upgrade $http_upgrade;
			proxy_connect_timeout 120;
			proxy_send_timeout 120;
			proxy_read_timeout 180;
		}
		location ~* \.io {
			proxy_http_version 1.1;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $remote_addr;
			proxy_set_header Upgrade $http_upgrade;
			proxy_connect_timeout 120;
			proxy_send_timeout 120;
			proxy_read_timeout 180;

			proxy_pass http://socket;
			proxy_redirect off;

			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection "upgrade";
		}
	}
}


#server {
#    listen 80;
#    server_name reverse-proxy.englishamp.com;
#    location / {
#        proxy_pass http://proxi.englishamp.com;
#        proxy_set_header Host $host;
#        proxy_set_header X-Real-IP $remote_addr;
#    }
#}
#server {
#    listen 80;
#    set $root_path /mnt/DATA/www/run/nginx reverse proxy;
#    server_name reverse-proxy.englishamp.com;
#    location "/mnt/DATA/www/run/nginx reverse proxy" {
#        Директива proxy_pass используется для указания внутреннего сервера, на который должен быть перенаправлен запрос. В приведенных примерах proxy_pass используется для проксирования запросов на внутренний сервер, работающий по адресу http://localhost:3000 или http://proxi.englishamp.com. Это означает, что любые запросы, полученные сервером Nginx, будут перенаправлены на указанный внутренний сервер для обработки.
#        proxy_pass http://proxi.englishamp.com;
#        proxy_set_header Host $host;
#        proxy_set_header X-Real-IP $remote_addr;
#        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#        proxy_set_header X-Forwarded-Proto $scheme;
#    }
#    location /mnt/DATA/www/run/nginx\ reverse\ proxy {
#        alias /mnt/DATA/www/run/nginx\ reverse\ proxy;
#        try_files $uri $uri/ =404;
#    }
#}
#server {
#Директива listen 80 используется для указания номера порта, на котором сервер должен прослушивать входящие HTTP-запросы. В этом случае он установлен на порт 80, который является портом по умолчанию для HTTP-трафика. Это означает, что сервер будет принимать входящие запросы на порт 80 и обрабатывать их соответствующим образом.
#listen 80;
#	root "/mnt/DATA/www/run/nginx reverse proxy";
#server_name reverse-proxy.englishamp.com www.reverse-proxy.englishamp.com;
#	location ^~ /assets/ {
#		gzip_static on;
#		expires 12h;
#		add_header Cache-Control public;
#  }
#	location / {
#		proxy_http_version 1.1;
#		proxy_cache_bypass $http_upgrade;
#		proxy_set_header Upgrade $http_upgrade;
#		proxy_set_header Connection 'upgrade';
#		proxy_set_header Host $host;
#		proxy_set_header X-Real-IP $remote_addr;
#		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#		proxy_set_header X-Forwarded-Proto $scheme;
#		Строка `proxy_pass http://localhost:11004;` настраивает прокси для передачи запросов на внутренний сервер, работающий на `localhost` через порт `11004`. Это означает, что любые запросы, полученные сервером Nginx, будут перенаправлены на указанный внутренний сервер для обработки.
#        proxy_pass http://localhost:11004;
#	}
#}
#server {
#listen 80;
#	root "/mnt/DATA/www/run/nginx reverse proxy";
#server_name reverse-proxy.englishamp.com www.reverse-proxy.englishamp.com;
#	location ^~ /assets/ {
#		gzip_static on;
#		expires 12h;
#		add_header Cache-Control public;
#  }
#	location / {
#		proxy_http_version 1.1;
#		proxy_cache_bypass $http_upgrade;
#		proxy_set_header Upgrade $http_upgrade;
#		proxy_set_header Connection 'upgrade';
#		proxy_set_header Host $host;
#		proxy_set_header X-Real-IP $remote_addr;
#		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#		proxy_set_header X-Forwarded-Proto $scheme;
#		proxy_pass http://localhost:3000;
#	}
#	location / {
#        proxy_redirect http://localhost:11004;
#		proxy_set_header Host $host;
#		proxy_set_header X-Real-IP $remote_addr;
#		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#		proxy_set_header X-Forwarded-Proto $scheme;
#		proxy_pass http://localhost:11004;
#	}
#}